#include <stdio.h>
#include <stdlib.h>

// Define the structure of a node
struct Node {
    int data;
    struct Node* next;
};

// Function to insert a node at the end
struct Node* insertAtEnd(struct Node* p, int item) {
    // Step 1: Allocate memory for a new node
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    // Step 2: Assign the data
    temp->data = item;
    // Step 3: Set the next pointer to NULL
    temp->next = NULL;

    // Step 4: Check if the list is empty
    if (p == NULL) {
        p = temp; // Set p to the new node
    } else {
        // Step 5: Traverse to the end of the list
        struct Node* q = p;
        while (q->next != NULL) {
            q = q->next; // Move to the next node
        }
        // Step 7: Link the last node to the new node
        q->next = temp;
    }
    return p;
}

// Function to print the linked list
void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } printf("NULL\n");
}

// Main function
int main() {
    struct Node* head = NULL; // Initialize the list as empty

    // Insert some nodes
    head = insertAtEnd(head, 10);
    head = insertAtEnd(head, 20);
    head = insertAtEnd(head, 30);

    // Print the list
    printf("Linked List: ");
    printList(head);
    return 0;
}
