// Queue all operations: Enqueue, Dequeue, 
#include<stdio.h>
#define size 50
int queue[size], front = -1, rear = -1;

int isEmpty() {
    return front == -1;
}

int isFull() {
    return rear == size - 1;
}

void enqueue(int data) {
    if(isFull()) {
        printf("\nQueue is full");
        return;
    }
    if (isEmpty()) {
        front = 0;
    }
    queue[++rear] = data;
    printf("\n%d Item Successfully Enqueued in Queue",queue[rear]);
}

void dequeue() {
    if(isEmpty()) {
        printf("\nQueue is empty");
        return;
    }
    printf("\n%d Item Successfully Dequeued from Queue",queue[front]);
    if (front == rear) {
        front = rear = -1;
    } else {
        front++;
    }
}

void display() {
    if (isEmpty()) {
        printf("\nQueue is empty");
        return;
    }
    printf("\nPrinting Queue Elements");
    for(int i = front; i <= rear; i++) {
        printf("\n%d",queue[i]);
    }
}

int main() {
    int choice, data;

    do{
        printf("\n1. Enqueue");
        printf("\n2. Dequeue");
        printf("\n3. Display");
        printf("\n4. Is Full");
        printf("\n5. Is Empty");
        printf("\n6. Exit");
        printf("\nEnter your choice: ");
        scanf("%d",&choice);

        switch (choice) {
        case 1: {
            printf("\nEnter data: ");
            scanf("%d",&data);
            enqueue(data);
            break;
        }

        case 2: 
            dequeue();
            break;
        
        case 3: 
            display();
            break;
        
        case 4:
            if (isFull()) {
                printf("\nQueue is full");
            } else {
                printf("\nQueue is not full");
            }
            break;
        
        case 5:
            if (isEmpty()) {
                printf("\nQueue is empty");
            } else {
                printf("\nQueue is not empty");
            }
            break;
        
        case 6: 
            printf("\nSuccessfully Exit");
            break;
        default: 
            printf("\nWrong Input");
            break;
        }
    } while(choice != 6);
    return 0;
}
