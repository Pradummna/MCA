// 1. Linked List Insertion at the beginning
#include<stdio.h>
#include<stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void insert_at_beginning(struct Node** head,int newData) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode == NULL) {  
        printf("Memory allocation failed!\n");
        return;
    }
    newNode -> data = newData;
    newNode -> next = *head;
    *head = newNode;
}

void display(struct Node* head) {
     if (head == NULL) {
        printf("List is empty\n");
        return;
    }
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d-> ",temp -> data);
        temp = temp -> next;
    } printf("Null\n");
}

int main() {
    struct Node* head = NULL;
    int term;
    printf("Enter total no. of integer data you want to store: ");
    scanf("%d",&term);

    if (term <= 0) {
        printf("No data to insert.\n");
        return 0;
    }

    for (int i = 0; i < term; i++) {
        int data;
        printf("\n%d Data: ", i+1);
        scanf("%d",&data);
        insert_at_beginning(&head, data);
    }
    display(head);
    return 0;
}
