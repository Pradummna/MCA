// Array program to insert, display, find max, min, avg value creating menu
#include<stdio.h>
#include<stdlib.h>

void insert(int* arr, int size);
int menu(int* arr, int size);
void display(int arr[], int size);
int findMax(int arr[], int size);
int findMin(int arr[], int size);
int findSum(int arr[], int size);
int findAvg(int arr[], int size);

int main() {
	printf("Array operations\n");
	int size;
	printf("\nEnter the size of an array: ");
	scanf("%d", &size);
	
	if(size > 0) {
		int* arr=(int*)malloc(size * sizeof(int));
		
		if(arr == NULL) {
			printf("\nMemory allocation failed\n");
			return -1;
		}
		insert(arr, size);
		free(arr);
	} else {
		printf("\nInvalid size must be greater than 0\n");
	}
	
	return 0;
}

void insert(int* arr, int size) {
	int i;
	
	printf("\nEnter elements into an array:\n\n");
	for(i=0; i<size; i++) {
		printf("%d index: ", i);
		scanf("%d",&arr[i]);
	}
	menu(arr, size);
}

int menu(int* arr, int size) {
	int choice;
	
	do {
		printf("\n\nMenu for performing array operations\n");
		printf("\n 1. Display");
		printf("\n 2. Find Maximum Value");
		printf("\n 3. Find Minimum Value");
		printf("\n 4. Find Sum");
		printf("\n 5. Find Average");
		printf("\n 6. Exit");
		printf("\n\nEnter your choice: ");
		scanf("%d", &choice);
		
	switch(choice) {
		case 1: {
			display(arr, size);
			break;
		}
			
		case 2: {
			int max = findMax(arr, size);
			printf("\nThe maximum value of array is: %d", max);
			break;
		}
			
		case 3:	{
			int min = findMin(arr, size);
			printf("\nThe minimum value of array is: %d", min);
			break;
		}
		
		case 4: {
			int sum = findSum(arr, size);
			printf("\nThe sum of array is: %d", sum);
			break;
		}
		
		case 5: {
			float avg = findAvg(arr, size);
			printf("\nThe average of array is: %f", avg);
			break;
		}

		case 6:
			printf("\nExiting menu");
			break;
			
		default:
			printf("\nInvalid choice");
			break;
		}
	}while(choice != 6);
	
	return 0;
}

void display(int arr[], int size) {
	int i;
	printf("\nDisplay the array elements: ");
	for(i=0; i<size; i++) {
		printf("%d ", arr[i]);
	}
}

int findMax(int arr[], int size) {
	int i, max_value=arr[0];
	
	for(i = 1; i<size; i++) {
		if(max_value > arr[i]) {
			max_value = max_value;
		} else {
			max_value = arr[i];
		}
	}
	return max_value;
}

int findMin(int arr[], int size) {
	int i, min_value=arr[0];
	
	for(i=1; i<size; i++) {
		if(min_value < arr[i]) {
			min_value = min_value;
		} else {
			min_value = arr[i];
		}
	}
	return min_value;
}

int findSum(int arr[], int size) {
	int i, sum = 0;
	for(i=0; i<size; i++) {
		sum+=arr[i];
	}
	return sum;
}

int findAvg(int arr[], int size) {
	int i, sum=0;
	
	for(i=0; i<size; i++) {
		sum+=arr[i];
	} 
	return (float)sum / size;
}
