// Stack push operation
#include<stdio.h>
#include<stdlib.h>
#define N 100

void push(int stack[], int *top);
void show(int stack[], int top);

int main() {
	printf("\nStack Operation");
	int stack[N], top = -1; // Sending top variable as a pointer
	int choice;
	
	if(top == N-1) {
		printf("\n\nStack Overflow");
	} else {
		do {
			printf("\nMenu");
			printf("\n 1. Push\n 2. Show\n 3. Exit");
			
			printf("\n\nEnter your choice:");
			scanf("%d",&choice);
			
			switch(choice) {
				
				case 1: {
					push(stack, &top);
					break;
				}
				
				case 2: {
					show(stack, top);
					break;
				}
				
				case 3: 
					printf("\n\nSuccessfully Exit");				
					break;				
				
				default:
					printf("\nInvalid Input");
					break;
			} 
			
		} while(choice != 3);
	}
	
	return 0;
}

void push(int stack[], int *top) {
	int i, elem_no;
	
	if(*top == N-1) {
		printf("\n\nStack overflow");
	} else {
		printf("\n\nEnter the number of elements: ");
		scanf("%d", &elem_no);
		
		for(i=0; i<elem_no; i++) {
			if(*top == N-1) {
				printf("\n\nStack overflow");
				break;
			}
			(*top)++;
			printf("\n%d Stack: ", i);
			scanf("%d",&stack[*top]);	
		}
		printf("\n\nElements successfully add into stack");
	}
}

void show(int stack[], int top) {
	if(top == -1) {
		printf("\n\nStack is Empty");
	} else {
		int i;
		printf("\nStack Elements:");
		for(i=0; i<=top; i++) {
			printf("\nStack %d: %d",i,stack[i]);
		}
	}
}
